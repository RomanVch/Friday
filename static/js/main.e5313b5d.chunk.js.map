{"version":3,"sources":["components/SuperComponents/c2-SuperButton/SuperButton.module.css","components/SuperComponents/c1-SuperInputText/SuperInputText.module.css","components/SuperComponents/c3-SuperCheckbox/SuperCheckbox.module.css","components/EnteringNewPassword.tsx","components/Login.tsx","components/Prophail.tsx","components/RecoveryPassport.tsx","components/SuperComponents/c1-SuperInputText/SuperInputText.tsx","components/SuperComponents/c3-SuperCheckbox/SuperCheckbox.tsx","components/SuperComponents/c2-SuperButton/SuperButton.tsx","components/TestComponent.tsx","components/Error404.tsx","components/Registor.tsx","components/Routes.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","bll/auth-reducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","EnteringNewPassword","Login","Prophail","RecoveryPassport","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","placeholder","SuperCheckbox","onChangeChecked","children","name","md_checkbox","checked","id","htmlFor","SuperButton","red","finalClassName","default","TestComponent","Error404","Registor","Roters","exact","path","render","Header","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","auth","rootReducer","combineReducers","authReducer","state","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5313b5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__26VjC\",\"default\":\"SuperButton_default__1KYV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3LSaV\",\"errorInput\":\"SuperInputText_errorInput__22Cf3\",\"error\":\"SuperInputText_error__37pr4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"md_checkbox\":\"SuperCheckbox_md_checkbox__LeZsP\",\"md_checkbox-inline\":\"SuperCheckbox_md_checkbox-inline__2D-d6\",\"md-checkbox\":\"SuperCheckbox_md-checkbox__vXLEz\"};","import React from 'react';\n\nexport const EnteringNewPassword=()=> {\n  return (\n    <div >\n<p>Ввести новый пароль</p>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const Login=()=> {\n  return (\n      <div >\n        <p>Логинизация</p>\n      </div>\n  );\n}\n","import React from 'react';\n\nexport const Prophail=()=> {\n  return (\n      <div >\n        <p>Профайл</p>\n      </div>\n  );\n}\n","import React from 'react';\n\nexport const RecoveryPassport=()=> {\n  return (\n    <div >\n<p>Поменять пароль</p>\n    </div>\n  );\n}\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ?`${  className +  \" \" + s.errorInput}`:`${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={\"form__group\"}>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                placeholder={error}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, LabelHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\ntype aaa = DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: any\r\n    spanClassName?: string\r\n    name:string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, name,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <div className={s.md_checkbox}>\r\n\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                name={name}\r\n                id={\"i2\"}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <label htmlFor={\"i2\"}>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: any\r\n\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default + \" \" + s.red}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from 'react';\nimport SuperInputText from \"./SuperComponents/c1-SuperInputText/SuperInputText\";\nimport SuperCheckbox from \"./SuperComponents/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperButton from \"./SuperComponents/c2-SuperButton/SuperButton\";\n\nexport const TestComponent=()=> {\n  return (\n    <div >\n<SuperInputText/>\n<SuperCheckbox name={'иван'}/>\n<SuperButton/>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport './../App.css';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div className={\"fof__background\"}></div>\r\n            <div className={\"fof__fof\"}>404</div>\r\n            <div className={\"fof__not\"}>Page not found!</div>\r\n            <div className={\"fof__not\"}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\n\nexport const Registor=()=> {\n  return (\n    <div >\n<p>Регистрация</p>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {EnteringNewPassword} from \"./EnteringNewPassword\";\r\nimport {Login} from \"./Login\";\r\nimport {Prophail} from \"./Prophail\";\r\nimport {RecoveryPassport} from \"./RecoveryPassport\";\r\nimport {TestComponent} from \"./TestComponent\";\r\nimport Error404 from \"./Error404\";\r\nimport {Registor} from \"./Registor\";\r\n\r\nexport const Roters=()=> {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" render={() => <EnteringNewPassword/>}/>\r\n            <Route path=\"/Login\" render={() => <Login/>}/>\r\n            <Route path=\"/Prophail\" render={() => <Prophail/>}/>\r\n            <Route path=\"/RecoveryPassport\" render={() => <RecoveryPassport/>}/>\r\n            <Route path=\"/Registor\" render={() => <Registor/>}/>\r\n            <Route path=\"/TestComponent\" render={() => <TestComponent/>}/>\r\n            <Route render={() => <Error404/>}/>\r\n        </Switch>\r\n    );\r\n}\r\n","import {HashRouter, NavLink, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport './../App.css';\r\nimport React from \"react\";\r\n\r\nexport const Header=()=> {\r\n    return (\r\n        <header>\r\n            <div className={\"wrapperLink\"}>\r\n                <NavLink to=\"/\">Войти</NavLink>\r\n                <NavLink to=\"/Login\">Логин</NavLink>\r\n                <NavLink to=\"/Prophail\">Профайл</NavLink>\r\n                <NavLink to=\"/RecoveryPassport\">Паспорт</NavLink>\r\n                <NavLink to=\"/Registor\">регистрация</NavLink>\r\n                <NavLink to=\"/TestComponent\">тест</NavLink>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import React from 'react';\nimport {HashRouter} from \"react-router-dom\";\nimport './App.css';\nimport {Roters} from \"./components/Routes\";\nimport {Header} from \"./components/Header\";\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Header/>\n\n                <Roters/>\n\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState={\r\n    auth:false\r\n}\r\n\r\ntype initialStateType = {\r\n    auth: boolean;\r\n}\r\n\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: any): initialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {authReducer} from \"./auth-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers(\r\n    {authReducer: authReducer,\r\n    }\r\n)\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}